name: 'Code CI'

on:
    push:
        branches: ['prod', 'dev']
    pull_request:
        branches: ['prod', 'dev']
    schedule:
        - cron: '0 0 * * 0'

jobs:
    eslint:
        name: Run eslint scanning
        runs-on: ubuntu-latest
        permissions:
            contents: read
            security-events: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install ESLint
              run: |
                  npm install eslint@8.55.0

            - name: Run ESLint
              run: npm run eslint

    stylelint:
        name: Run stylelint scanning
        runs-on: ubuntu-latest
        permissions:
            contents: read
            security-events: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install stylelint
              run: |
                  npm install stylelint@16.0.2

            - name: Run stylelint
              run: npm run stylelint

    analyze:
        name: Run CodeQL analysis
        runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
        permissions:
            actions: read
            contents: read
            security-events: write

        strategy:
            fail-fast: false
            matrix:
                language: ['javascript']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            # Initializes the CodeQL tools for scanning.
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v2
              with:
                  languages: ${{ matrix.language }}

            # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
            - name: Autobuild
              uses: github/codeql-action/autobuild@v2

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v2
              with:
                  category: '/language:${{matrix.language}}'

    # test:
    #     name: Run Jest tests
    #     runs-on: ubuntu-latest
    #     permissions:
    #         contents: read
    #         security-events: write
    #     steps:
    #         - name: Checkout repo
    #           uses: actions/checkout@v3

    #         - name: Install Jest
    #           run: |
    #               npm install jest babel-jest @babel/core @babel/preset-env puppeteer jest-puppeteer

    #         - name: Install Xvfb
    #           run: |
    #               sudo apt-get install xvfb

    #         - name: Run tests with Xvfb
    #           run: |
    #               xvfb-run -a npm test
    #           env:
    #             CI: true

    #         - name: Clean up Xvfb
    #           uses: bcomnes/cleanup-xvfb@v1
